name: XHlive

on:
  schedule:
    - cron: 0 4 * * *
  workflow_dispatch:
    inputs:
      rebuild:
        description: '忽略构建记录以重新构建'
        required: false
        type: boolean
      donotpublish:
        description: '构建后不提交发布新版'
        required: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - userName: xisohi
            repoName: XHYS
            branchName: XHlive
            java_ver: 21
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check New Commit
        run: |
          upStream="https://github.com/${{  matrix.userName }}/${{ matrix.repoName }}"
          echo "upStream=$upStream" >> $GITHUB_ENV
          commit=$(curl -sL "https://api.github.com/repos/${{  matrix.userName }}/${{ matrix.repoName }}/commits/${{ matrix.branchName }}" | jq -r '.sha')
          if [ $? -ne 0 ]; then
            echo "Failed to get commit from API"
            exit 1
          fi
          if [ -z "$commit" ] || ! grep -q "$commit" README.md; then
            echo "commit=$commit" >> $GITHUB_ENV
            echo "commitS=${commit:0:7}" >> $GITHUB_ENV
          fi
      - name: Checkout Source Code
        if: ${{ env.commit }}
        run: |
          git clone ${{ env.upStream }} TVBoxOSC
          cd TVBoxOSC
          git checkout ${{ env.commit }}
          echo "tag=$(git log --date=format:'%y%m%d%H%M' --pretty=format:%cd ${{ env.commitS }} -1)" >> $GITHUB_ENV
      - name: Generate Tag Name
        if: ${{ env.commit }}
        working-directory: TVBoxOSC
        run: |
          TAG_NAME="v$(date +'%y.%m.%d.%H')"
          echo "tag_name=$TAG_NAME" >> $GITHUB_ENV
          VERSION_CODE="$(date +'%y%m%d%H')"
          echo "version_code=$VERSION_CODE" >> $GITHUB_ENV
      - name:  Update version
        if: ${{ env.commit }}
        working-directory: TVBoxOSC
        run: |
          sed -i "s/\"version_code\": [0-9]*/\"version_code\": ${{ env.version_code }}/" update.json
          sed -i "s/\"version_name\": \"v[0-9]*\.[0-9]*\.[0-9]*\.[0-9]*\"/\"version_name\": \"${{ env.tag_name }}\"/" update.json

      - name: Release Apk Sign
        if: ${{ env.commit }}
        working-directory: TVBoxOSC
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add update.json
          git commit -m "Update update.json"
          git push
          git rev-parse HEAD > commitSHA.txt
          echo "NEWSHA=$(cat commitSHA.txt)" >> $GITHUB_ENV

      - name: Create Tag
        if: ${{ env.commit }}
        working-directory: TVBoxOSC
        run: |
          git tag ${{ env.tag_name }} ${{ env.NEWSHA }}
          git push origin ${{ env.tag_name }}
      - name: Set up JDK 21
        if: ${{ env.commit }}
        working-directory: TVBoxOSC
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Get History
        if: ${{ env.commit }}
        working-directory: TVBoxOSC
        id: get_history
        run: |
          chmod +x history.sh
          output=$(./history.sh)
          echo "$output" > history.md

      - name: Create Release
        if: ${{ env.commit }}
        working-directory: TVBoxOSC
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.tag_name }}
          release_name: Release ${{ env.tag_name }}
          draft: false
          prerelease: false
          body_path: history.md

      - name: Run build with Gradle wrapper
        if: ${{ env.commit }}
        working-directory: TVBoxOSC
        run: ./gradlew clean && ./gradlew assembleRelease

      - name: Sign app APK
        if: ${{ env.commit }}
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release
          alias: ${{ secrets.ALIAS }}
          signingKeyBase64: ${{ secrets.KEYSTORE }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ALIAS_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      - name: Set Asset Name
        if: ${{ inputs.donotpublish && env.commit }}
        id: set_asset_name
        run: |
          VERSION_WITHOUT_V=$(echo '${{ env.tag_name }}' | sed 's/^v//')
          echo "asset_name=XHlive.${VERSION_WITHOUT_V}.apk" >> $GITHUB_ENV

      - name: Upload Release Asset
        uses: ncipollo/release-action@v1
        if: ${{ env.commit }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.SIGNED_RELEASE_FILE }}
          asset_name: ${{ env.asset_name }}
          asset_content_type: application/vnd.android.package-archive